apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jenkins.fullname" . }}
  labels:
{{ include "jenkins.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "jenkins.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "jenkins.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "jenkins.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: volume-mount-hack
          image: busybox
          command: ["sh", "-c", "chmod -R 777 /var/jenkins_home"]
          volumeMounts:
          - name: jenkins-home
            mountPath: /var/jenkins_home
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /var/run/docker.sock
              name: docker-sock
            - mountPath: /usr/local/sbin/docker
              name: host-bin
            - mountPath: /var/jenkins_home
              name: jenkins-home
          livenessProbe:
            tcpSocket:
              path: /
              port: http
            initialDelaySeconds: 45
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            tcpSocket:
              path: /
              port: http
            initialDelaySeconds: 45
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
        - name: host-bin
          hostPath:
            path: /bin/docker
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: {{ include "jenkins.fullname" . }}-claim
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
