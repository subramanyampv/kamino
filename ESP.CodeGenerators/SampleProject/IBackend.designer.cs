/// This file is autogenerated by a tool.
using System;

using ESP.Core.Interfaces;
using ESP.Core.Modules.Cache;
using ESP.Core.Objects.Social;

namespace SampleProject
{
	public partial class CachedBackend : IBackend
	{
		private readonly IBackend _backend;

		/// <summary>
		/// Initializes a new instance of the <see cref="CachedBackend"/> class. 
		/// </summary>
		/// <param name="backend">
		/// The backend provider.
		/// </param>
		public CachedBackend(IBackend backend)
		{
			_backend = backend;
		}

		/// <summary>
		/// Gets the cache key to use.
		/// </summary>
		/// <param name="methodName">The method that is doing the caching</param>
		/// <param name="extraKeys">More keys to append to the cache key.</param>
		/// <returns>A cache key for the given method and page</returns>
		protected string GetCacheKey(string methodName, params string[] extraKeys)
		{
			string moreKey = string.Join("-", extraKeys);
			return string.Format("IBackend_{0}{1}", methodName, moreKey);
		}

#region Auto generated get methods
public virtual string GetName()
{
	string cacheKey = GetCacheKey("GetName");
	return CacheManager.CacheMethod(cacheKey, () => _backend.GetName());
}
public virtual string[] GetComments(string author)
{
	string cacheKey = GetCacheKey("GetComments", author);
	return CacheManager.CacheMethod(cacheKey, () => _backend.GetComments(author));
}

#endregion
	}
}
